/// <summary>
/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
/// By starting with 1 and 2, the first 10 terms will be:
///     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
/// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
/// find the sum of the even-valued terms.
/// </summary>
/// <returns></returns>
pub fn compute() -> String {
    let mut result = 2;
    let mut term1 = 1;
    let mut term2 = 2;

    let mut sum = term1 + term2;
    while sum < 4000000 {
        if ::euler_library::math_library::is_multiple(sum, 2) { result = result + sum; }
        term1 = term2;
        term2 = sum;
        sum = term1 + term2;
    };

    result.to_string()
}
